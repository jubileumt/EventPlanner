// <auto-generated />
using System;
using EventPlanner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventPlanner.Migrations
{
    [DbContext(typeof(UsuarioPremiumBD))]
    partial class UsuarioPremiumBDModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventPlanner.Models.Avaliacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly>("DataComentario")
                        .HasColumnType("date");

                    b.Property<int>("EventoID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioPremiumID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("EventPlanner.Models.Evento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cidade");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataInicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time")
                        .HasColumnName("Duracao");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Estado");

                    b.Property<byte[]>("FotoDoEvento")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FotoDoEvento");

                    b.Property<string>("Identificador")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Identificador");

                    b.Property<string>("NomeEvento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NomeEvento");

                    b.Property<string>("Organizador")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organizador");

                    b.Property<int?>("QuantAlcool")
                        .HasColumnType("int")
                        .HasColumnName("QuantAlcool");

                    b.Property<int?>("QuantCadeiras")
                        .HasColumnType("int")
                        .HasColumnName("QuantCadeiras");

                    b.Property<int?>("QuantCarne")
                        .HasColumnType("int")
                        .HasColumnName("QuantCarne");

                    b.Property<int?>("QuantCriancas")
                        .HasColumnType("int")
                        .HasColumnName("QuantCriancas");

                    b.Property<int?>("QuantDoces")
                        .HasColumnType("int")
                        .HasColumnName("QuantDoces");

                    b.Property<int?>("QuantMaxPessoas")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("QuantMaxPessoas");

                    b.Property<int?>("QuantMetrosQuadrados")
                        .HasColumnType("int")
                        .HasColumnName("QuantMetrosQuadrados");

                    b.Property<int?>("QuantRefri")
                        .HasColumnType("int")
                        .HasColumnName("QuantRefri");

                    b.Property<int?>("QuantSalgados")
                        .HasColumnType("int")
                        .HasColumnName("QuantSalgados");

                    b.Property<TimeSpan>("TempoAteEvento")
                        .HasColumnType("time")
                        .HasColumnName("TempoAteEvento");

                    b.Property<string>("TipoEvento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoEvento");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioPremiumID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("EventPlanner.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int>("Idade")
                        .HasColumnType("int")
                        .HasColumnName("Idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("Telefone");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("Tipo");

                    b.Property<int?>("eventoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("eventoID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EventPlanner.Models.UsuarioPremium", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AvaliacaoID")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CEP");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CPF");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cidade");

                    b.Property<string>("CodigoSeguranca")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CodigoSeguranca");

                    b.Property<string>("DataValidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataValidade");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Email");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Estado");

                    b.Property<int>("Idade")
                        .HasColumnType("int")
                        .HasColumnName("Idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("Nome");

                    b.Property<string>("NumeroCartao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NumeroCartao");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Telefone");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("Tipo");

                    b.Property<string>("TitularCartao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TitularCartao");

                    b.Property<int?>("eventoID")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AvaliacaoID");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("eventoID");

                    b.HasIndex("usuarioID");

                    b.ToTable("UsuarioPremium");
                });

            modelBuilder.Entity("EventPlanner.Models.Usuario", b =>
                {
                    b.HasOne("EventPlanner.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("eventoID");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("EventPlanner.Models.UsuarioPremium", b =>
                {
                    b.HasOne("EventPlanner.Models.Avaliacao", "Avaliacao")
                        .WithMany()
                        .HasForeignKey("AvaliacaoID");

                    b.HasOne("EventPlanner.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("eventoID");

                    b.HasOne("EventPlanner.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID");

                    b.Navigation("Avaliacao");

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
